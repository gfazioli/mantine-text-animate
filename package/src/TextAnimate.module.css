.root {
  --text-animate-translation-distance: 20px;
  --text-animate-blur-amount: 10px;
  --text-animate-scale-amount: 0.8;
}

/* Base styles */
.segment {
  display: inline-block;
  white-space: pre;
  will-change: opacity, transform, filter;
}

.lineSegment {
  display: block;
  white-space: normal;
}

/* Animation durations */
.duration-300 {
  animation-duration: 0.3s;
}

.duration-500 {
  animation-duration: 0.5s;
}

.duration-700 {
  animation-duration: 0.7s;
}

/* Animation timing functions */
.ease {
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
}

/* Animation fill modes */
.forwards {
  animation-fill-mode: forwards;
}

/* Static display */
.static {
  opacity: 1;
  transform: translate(0, 0) scale(1);
  filter: blur(0px);
}

/* Hidden state */
.hidden {
  display: none;
}

/* Animation variants - IN animations */
.fadeIn-in,
.fade-in,
.blurIn-in,
.blurInUp-in,
.blurInDown-in,
.slideUp-in,
.slideDown-in,
.slideLeft-in,
.slideRight-in,
.scaleUp-in,
.scaleDown-in {
  opacity: 0; /* Start with opacity 0 to ensure text is hidden initially */
  animation-fill-mode: forwards;
}

.fadeIn-in {
  animation-name: fadeIn;
}

.fade-in {
  animation-name: fade;
}

.blurIn-in {
  animation-name: blurIn;
}

.blurInUp-in {
  animation-name: blurInUp;
}

.blurInDown-in {
  animation-name: blurInDown;
}

.slideUp-in {
  animation-name: slideUp;
}

.slideDown-in {
  animation-name: slideDown;
}

.slideLeft-in {
  animation-name: slideLeft;
}

.slideRight-in {
  animation-name: slideRight;
}

.scaleUp-in {
  animation-name: scaleUp;
}

.scaleDown-in {
  animation-name: scaleDown;
}

/* Animation variants - OUT animations */
.fadeIn-out {
  animation-name: fadeOut;
}

.fade-out {
  animation-name: fade;
  animation-direction: reverse;
}

.blurIn-out {
  animation-name: blurOut;
}

.blurInUp-out {
  animation-name: blurOutUp;
}

.blurInDown-out {
  animation-name: blurOutDown;
}

.slideUp-out {
  animation-name: slideOutUp;
}

.slideDown-out {
  animation-name: slideOutDown;
}

.slideLeft-out {
  animation-name: slideOutLeft;
}

.slideRight-out {
  animation-name: slideOutRight;
}

.scaleUp-out {
  animation-name: scaleOutUp;
}

.scaleDown-out {
  animation-name: scaleOutDown;
}

/* Keyframes for animations */
@keyframes fade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(var(--text-animate-translation-distance));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(var(--text-animate-translation-distance));
  }
}

@keyframes blurIn {
  from {
    opacity: 0;
    filter: blur(var(--text-animate-blur-amount));
  }
  to {
    opacity: 1;
    filter: blur(0);
  }
}

@keyframes blurOut {
  from {
    opacity: 1;
    filter: blur(0);
  }
  to {
    opacity: 0;
    filter: blur(var(--text-animate-blur-amount));
  }
}

@keyframes blurInUp {
  from {
    opacity: 0;
    filter: blur(var(--text-animate-blur-amount));
    transform: translateY(var(--text-animate-translation-distance));
  }
  to {
    opacity: 1;
    filter: blur(0);
    transform: translateY(0);
  }
}

@keyframes blurOutUp {
  from {
    opacity: 1;
    filter: blur(0);
    transform: translateY(0);
  }
  to {
    opacity: 0;
    filter: blur(var(--text-animate-blur-amount));
    transform: translateY(var(--text-animate-translation-distance));
  }
}

@keyframes blurInDown {
  from {
    opacity: 0;
    filter: blur(var(--text-animate-blur-amount));
    transform: translateY(calc(-1 * var(--text-animate-translation-distance)));
  }
  to {
    opacity: 1;
    filter: blur(0);
    transform: translateY(0);
  }
}

@keyframes blurOutDown {
  from {
    opacity: 1;
    filter: blur(0);
    transform: translateY(0);
  }
  to {
    opacity: 0;
    filter: blur(var(--text-animate-blur-amount));
    transform: translateY(calc(-1 * var(--text-animate-translation-distance)));
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(var(--text-animate-translation-distance));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideOutUp {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(var(--text-animate-translation-distance));
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(calc(-1 * var(--text-animate-translation-distance)));
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideOutDown {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(calc(-1 * var(--text-animate-translation-distance)));
  }
}

@keyframes slideLeft {
  from {
    opacity: 0;
    transform: translateX(var(--text-animate-translation-distance));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(var(--text-animate-translation-distance));
  }
}

@keyframes slideRight {
  from {
    opacity: 0;
    transform: translateX(calc(-1 * var(--text-animate-translation-distance)));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(calc(-1 * var(--text-animate-translation-distance)));
  }
}

@keyframes scaleUp {
  from {
    opacity: 0;
    transform: scale(var(--text-animate-scale-amount));
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOutUp {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(var(--text-animate-scale-amount));
  }
}

@keyframes scaleDown {
  from {
    opacity: 0;
    transform: scale(var(--text-animate-scale-amount));
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOutDown {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(var(--text-animate-scale-amount));
  }
}

/* Add a new class for the initial hidden state */
.initialHidden {
  opacity: 0;
  visibility: hidden;
}
